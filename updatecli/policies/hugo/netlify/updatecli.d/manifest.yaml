---
# Helpers
# {{ $GitHubUser := env "GITHUB_ACTOR"}}
# {{ $GitHubPAT := env "GITHUB_TOKEN" }}
# {{ $GitHubRepositoryList := env "GITHUB_REPOSITORY" | split "/"}}
# {{ $GitHubUsername := env "GITHUB_ACTOR" }}

name : 'deps: Bump HUGO version in Netlify configuration'
pipelineid: '{{ .pipelineid }}'

# Only enable the scm section if Updatecli is executed from a Github Action
# {{ if or (.scm.enabled) (env "GITHUB_REPOSITORY") }}
actions:
    default:
        title: 'deps: bump HUGO to {{ source "hugo" }}'
        kind: "github/pullrequest"
        spec:
            automerge: {{ .automerge }}
            labels:
                - "chore"
                - "dependencies"
            mergemethod: "squash"
        scmid: "default"

scms:
    default:
        kind: "github"
        spec:
            # Priority set to the environment variable
            user: '{{ default $GitHubUser .scm.user }}'
            email: '{{ .scm.email }}'
            owner: '{{ default $GitHubRepositoryList._0 .scm.owner }}'
            repository: '{{ default $GitHubRepositoryList._1 .scm.repository }}'
            token: '{{ default $GitHubPAT .scm.token }}'
            username: '{{ default $GitHubUsername  .scm.username }}'
            branch: '{{ .scm.branch }}'
# {{ end }}

sources:
    hugo:
        name: "Get latest hugo version"
        kind: "githubrelease"
        spec:
            owner: "gohugoio"
            repository: "hugo"
            token: '{{ default .scm.token $GitHubPAT }}'
            username: '{{ default .scm.username $GitHubUsername }}'
            versionfilter:
                kind: "semver"
                pattern: '{{ .versionpattern }}'
        transformers:
            - trimprefix: v
targets:
    netlify:
        name: 'deps: update hugo used by Netlify to {{ source "hugo" }}'
        kind: file
        disablesourceinput: true
        spec:
            file: netlify.toml
            matchpattern: HUGO_VERSION = "(.*)"
            replacepattern: HUGO_VERSION = "{{ source "hugo" }}"
# Only enable the scm section if Updatecli is executed from a Github Action
# {{ if or (.scm.enabled) (env "GITHUB_REPOSITORY") }}
        scmid: default
# {{ end }}
